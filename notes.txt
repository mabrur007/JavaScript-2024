********** Part_29 *********
# 03_highOrder.js
- we will use for-of loop in terms of array.
- we will use for-of loop in terms of Map().
- we will use for-each loop in terms of array.
- we will use for-in loop in terms of object.

********** Part_30 *********
# 04.js

- inside of an arrow function, if there is {} then we will need to add return.
    if there is (), then no return needed.

- inside filter() method, usually we check any condition. filter returns an array.

- map returns an array. 

- we can add multiple methods in a same line.

- reduce()


********** 06_dom *********
********** Part_31 *********
# one.html

- document.getElementById('firstName').innerHTML = '<h1>Sabbir</h1>'

- innerText : it gives the displayed text 

- textContent : it gives complete text.


********** Part_32 *********
- ex: 
    const heading = document.querySelectorAll('h1')
    heading.forEach((l) => {
    let myColor = Math.floor(Math.random() * 1000)
    console.log(myColor)
    l.style.color = `#${myColor}`
})


********** Part_33 *********
# two.html

-   // console.log(child);
    // console.log(child.parentElement);
    // console.log(child.nextElementSibling.innerHTML);
    // console.log(parent.childNodes);

# three.html 

- we will practice here how to create an element in DOM.


********** Part_34 *********

- When we use element.innerHTML, it traverse all the DOM tree 
    and that is not performance optimized. To make a good performance 
    optimized code we can follow the code below-

    element.apperndChild(document.createTextNode(carName))

    ex:
    // this is unoptimized code of adding any dom element
        // function addElem(car) {
        //     const li = document.createElement("li")
        //     li.innerHTML = `${car}`
        //     document.querySelector(".cars").appendChild(li)
        // }
        // addElem("Mgv")
        // addElem("corolla")
        // addElem("sedan")


        // this is optimized code of adding any dom element (very inmportant)
        function addCar(carName){
            const li = document.createElement('li'); // we have created our 'li' element here
            const car = document.createTextNode(carName) // we have created textNode here
            li.appendChild(car) // we have set the textNode in our created 'li' 
            const ul = document.querySelector('.cars') // we catch the target parent 'ul' here. 
            ul.appendChild(li) // we have set our created 'li' inside the parent 'ul'
        }